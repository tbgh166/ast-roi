<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Contrast Triage Cost Savings Calculator</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 40px;
      background-color: #f9f9f9;
    }
    label {
      display: block;
      margin-top: 10px;
    }
    input[type="number"] {
      width: 100px;
    }
    .section {
      margin-top: 30px;
      padding: 20px;
      background-color: #fff;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }
    h2 {
      margin-top: 0;
    }
    .result {
      font-weight: bold;
    }
    #calculateBtn {
      margin-top: 20px;
      padding: 10px 20px;
      font-size: 16px;
      background-color: #007BFF;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }
    #calculateBtn:hover {
      background-color: #0056b3;
    }
    footer {
      margin-top: 40px;
      font-size: 14px;
      color: #333;
      background-color: #eef1f5;
      padding: 20px;
      border-radius: 8px;
    }
  </style>
</head>
<body>
  <h1>Contrast Triage Cost Savings Calculator</h1>

  <div class="section">
    <h2>Customer Facts</h2>
    <label>Average # of true vulnerabilities per app (including libraries): <input id="vulnsPerApp" type="number" value="1000"></label>
    <label># of apps: <input id="numApps" type="number" value="20"></label>
    <label>AppSec hourly rate ($): <input id="hourlyRate" type="number" value="70"></label>
  </div>

  <div class="section">
    <h2>Before Contrast</h2>
    <label>False positive rate (%): <input id="fpBefore" type="number" value="40"></label>
    <label>Time to triage a vulnerability (minutes): <input id="triageTime" type="number" value="20"></label>
    <p class="result">Triage cost per vulnerability: $<span id="costPerVulnBefore">0.00</span></p>
    <p class="result">Triage cost per app: $<span id="costPerAppBefore">0.00</span></p>
  </div>

  <div class="section">
    <h2>After Contrast</h2>
    <label>False positive rate (%): <input id="fpAfter" type="number" value="1"></label>
    <p class="result">Triage cost per vulnerability: $<span id="costPerVulnAfter">0.00</span></p>
    <p class="result">Triage cost per app: $<span id="costPerAppAfter">0.00</span></p>
    <p class="result">Cost savings per app: $<span id="savingsPerApp">0.00</span></p>
    <p class="result">Total cost savings - annual: $<span id="annualSavings">0.00</span></p>
    <p class="result">Total cost savings - monthly: $<span id="monthlySavings">0.00</span></p>
    <button id="calculateBtn">Calculate</button>
  </div>

  <footer>
    <strong>Assumptions</strong><br>
    40% industry false positive rate<br>
    1% Contrast false positive rate<br><br>
    <strong>Notes:</strong><br>
    Before Contrast triage cost represents the fact that an additional 40% cost must be added due to false positives that still must be triaged.<br>
    After Contrast cost per app represents the fact that an additional 1% cost must be added due to false positives that still must be triaged.<br><br>
    With Contrast AST if 10,000 vulnerabilities are remediated at a 1% FP then without Contrast and at a 40% FP, there would be 10,000 x 1.4 = 14,000 vulnerabilities detected and AppSec would need to figure out the false positives.
  </footer>

  <script>
    function formatNumber(num) {
      return num.toFixed(2).toLocaleString();
    }

    function calculate() {
      const vulnsPerApp = parseFloat(document.getElementById("vulnsPerApp").value);
      const numApps = parseFloat(document.getElementById("numApps").value);
      const hourlyRate = parseFloat(document.getElementById("hourlyRate").value);
      const fpBefore = parseFloat(document.getElementById("fpBefore").value) / 100;
      const triageTime = parseFloat(document.getElementById("triageTime").value);
      const fpAfter = parseFloat(document.getElementById("fpAfter").value) / 100;

      const costPerVulnBefore = (hourlyRate * triageTime) / 60;
      const costPerAppBefore = vulnsPerApp * (1 + fpBefore) * costPerVulnBefore;

      const costPerVulnAfter = costPerVulnBefore;
      const costPerAppAfter = vulnsPerApp * (1 + fpAfter) * costPerVulnAfter;

      const savingsPerApp = costPerAppBefore - costPerAppAfter;
      const annualSavings = savingsPerApp * numApps;
      const monthlySavings = annualSavings / 12;

      document.getElementById("costPerVulnBefore").textContent = formatNumber(costPerVulnBefore);
      document.getElementById("costPerAppBefore").textContent = formatNumber(costPerAppBefore);
      document.getElementById("costPerVulnAfter").textContent = formatNumber(costPerVulnAfter);
      document.getElementById("costPerAppAfter").textContent = formatNumber(costPerAppAfter);
      document.getElementById("savingsPerApp").textContent = formatNumber(savingsPerApp);
      document.getElementById("annualSavings").textContent = formatNumber(annualSavings);
      document.getElementById("monthlySavings").textContent = formatNumber(monthlySavings);
    }

    document.getElementById('calculateBtn').addEventListener('click', calculate);
    calculate();
  </script>
</body>
</html>
